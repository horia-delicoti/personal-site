"use strict";(self.webpackChunkpersonal_site=self.webpackChunkpersonal_site||[]).push([[8130],{7735:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/2023/04/15/increase-swap-pi","metadata":{"permalink":"/blog/2023/04/15/increase-swap-pi","source":"@site/blog/2023-04-15-increase-swap-pi.md","title":"Increase Swap on a Raspberry Pi","description":"The swap file is used to increase the system\u2019s total accessible memory beyond its hardware capabilities.","date":"2023-04-15T00:00:00.000Z","tags":[{"inline":false,"label":"Raspberry Pi","permalink":"/blog/tags/raspberry-pi","description":"Raspberry Pi tag description"}],"readingTime":2.08,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Increase Swap on a Raspberry Pi","tags":["raspberry-pi"]},"unlisted":false,"nextItem":{"title":"Install OS on an SSD with the RPi Imager","permalink":"/blog/2023/04/07/set-up-SDD-with-rpi"}},"content":"The swap file is used to increase the system\u2019s total accessible memory beyond its hardware capabilities.\\nThis means that when all of the Raspberry Pi\u2019s RAM is exhausted, it can start using the swap file as memory instead.\\n\x3c!-- truncate --\x3e\\nThe addition of more virtual memory allows the system to deal with more memory intensive tasks without running into out of memory errors or having to shut down other additional packages.\\nHowever, the downside to this is that accessing the swap file is a significantly slower process that can create slowdowns.\\n\\nThe reason for this is that the swap file exists on your actual disk, which has significantly lower read and write speeds then your RAM.  \\nAnother caveat of a large swap file is that you need that space to be free on your SD Card. You can\u2019t set a swap file on your Raspberry Pi larger than your available free space.\\n\\n### You will need\\n\\n* A Raspberry-Pi setup ([starter kit][rpi_starter_kit] is a great way to start)\\n* A [Micro SD Card][sd_card]\\n* Ethernet cable or Wi-Fi\\n* [Power Supply][power]\\n\\n### Increase the Swap File on a Raspberry Pi\\n\\nBefore we can increase our Raspberry Pi\u2019s swap file, we must first temporarily stop it.\\nThe swap file cannot be in use while we increase it.\\nTo stop the operating system from using the current swap file, run the following command.\\n\\n```sh\\nsudo dphys-swapfile swapoff\\n```\\n\\nNext, we need to modify the swap file configuration file.\\n\\n```sh\\nsudo vim /etc/dphys-swapfile\\n```\\n\\nWithin this config file, find the following line of text.\\n\\n```sh\\nCONF_SWAPSIZE=100\\n```\\n\\nTo increase or decrease the swap file, all you need to do is modify the numerical value you find here.\\nThis number is the size of the swap in megabytes.\\n\\n```sh\\nCONF_SWAPSIZE=1024\\n```\\n\\nWhatever size you set, you must have that space available on your SD card.\\nWe can now re-initialize the Raspberry Pi\u2019s swap file by running the command below.\\n\\n```sh\\nsudo dphys-swapfile setup\\n```\\n\\nWith the swap now recreated to the newly defined size, we can now turn the swap back on.\\n\\n```sh\\nsudo dphys-swapfile swapon\\n```\\n\\nTo reload all programs with access to the new memory pool, then restart your device.\\n\\n```sh\\nsudo reboot\\n```\\n\\n## References\\n\\n* [Raspberry Pi Swap File][rpi_swap_file]\\n\\n[rpi_starter_kit]: https://thepihut.com/products/raspberry-pi-starter-kit\\n[sd_card]: https://www.tomshardware.com/best-picks/raspberry-pi-microsd-cards\\n[power]: https://thepihut.com/blogs/raspberry-pi-tutorials/how-do-i-power-my-raspberry-pi\\n[rpi_swap_file]: https://pimylifeup.com/raspberry-pi-swap-file/"},{"id":"/2023/04/07/set-up-SDD-with-rpi","metadata":{"permalink":"/blog/2023/04/07/set-up-SDD-with-rpi","source":"@site/blog/2023-04-07-set-up-SDD-with-rpi.md","title":"Install OS on an SSD with the RPi Imager","description":"I\'ll walk you through setting up your Raspberry Pi 4 to boot from an USB connected SSD. We\'ll start by flashing the SD card, then copy the card to the drive, move on to setting up the Pi and finish off by removing the SD card and allowing the Pi to boot from the SSD.","date":"2023-04-07T09:08:00.000Z","tags":[{"inline":false,"label":"Raspberry Pi","permalink":"/blog/tags/raspberry-pi","description":"Raspberry Pi tag description"}],"readingTime":1.99,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Install OS on an SSD with the RPi Imager","date":"2023-04-07T09:08:00.000Z","tags":["raspberry-pi"]},"unlisted":false,"prevItem":{"title":"Increase Swap on a Raspberry Pi","permalink":"/blog/2023/04/15/increase-swap-pi"},"nextItem":{"title":"Create a static website with Hugo","permalink":"/blog/2023/03/29/static-web-hugo"}},"content":"I\'ll walk you through setting up your Raspberry Pi 4 to boot from an USB connected SSD. We\'ll start by flashing the SD card, then copy the card to the drive, move on to setting up the Pi and finish off by removing the SD card and allowing the Pi to boot from the SSD.\\n\x3c!-- truncate --\x3e\\n### You will need\\n\\n* A Raspberry-Pi setup ([starter kit][rpi_starter_kit] is a great way to start)\\n* A [2.5\\" SSD][2_5_ssd] (SATA connection)\\n* A [USB to SATA Cable][sata_to_usb]\\n\\n### Install Rasbperry Pi OS\\n\\n* Install Raspberry Pi OS using [Raspberry Pi Imager][rpi_software]\\n* Enable SSH\\n\\n## Getting started\\n\\nCopy SSH key:\\n\\n```sh\\nssh-copy-id -i ~/.ssh/mykey user@host\\n```\\n\\nOnce you have Raspberry Pi OS installed you\'ll want to make sure it\'s all up to date\\n\\n```sh\\nsudo apt-get update\\nsudo apt full-upgrade\\nsudo rpi-update\\nsudo reboot\\n```\\n\\nOnce you got back to your RPI Desktop:\\n\\n* plug in your SSD\\n* Copy the content of SD card to SSD by using SD Card Copier\\n\\nMake sure you have the latest bootloder by running\\n\\n```sh\\nsudo rpi-eeprom-update -d -a\\n```\\n\\nConfigure bootloader to boot from USB\\n\\n```sh\\nsudo raspi-config\\n```\\n\\nSelect:\\n\\n* Advanced Option -> Bootloder version -> Select first option -> Select No to reset boot ROM to defaults\\n* Advanced Option -> Boot Order -> Select USB Boot\\n* System Options -> Boot / Auto Login -> Console\\n\\nShutdown your Raspberry Pi, remove the SD Card and boot your device\\n\\n## Card speed test using the dd command\\n\\nTo find out the SD card write speed performance, we are creating 100MB of free storage space and five blocks of 20MB each\\n\\n```sh\\ndd if=/dev/zero of=./speedTestFile bs=20M count=5 oflag=direct\\n```\\n\\nTo find out the read speed information of your SD card, issue the following command in the terminal:\\n\\n```sh\\ndd if=./speedTestFile of=/dev/zero bs=20M count=5 oflag=dsync\\n```\\n\\n## References\\n\\n* [How To Boot A Raspberry Pi 4 From An SSD][boot_rpi4_youtube]\\n* [How to Test Speed of Raspberry Pi SD Card][card_speed_test]\\n* [How to Disable Desktop GUI on Raspberry Pi][disable_gui]\\n\\n[rpi_starter_kit]: https://thepihut.com/products/raspberry-pi-starter-kit\\n[2_5_ssd]: https://thepihut.com/products/wd-green-240gb-2-5-ssd\\n[sata_to_usb]: https://thepihut.com/products/ssd-to-usb-3-0-cable-for-raspberry-pi\\n[rpi_software]: https://www.raspberrypi.com/software/\\n[boot_rpi4_youtube]: https://www.youtube.com/watch?v=a8nzkLryGmM\\n[card_speed_test]: https://linuxhint.com/raspberry-pi-sd-card-speed-test/\\n[disable_gui]: https://linuxhint.com/disable-gui-raspberry-pi/"},{"id":"/2023/03/29/static-web-hugo","metadata":{"permalink":"/blog/2023/03/29/static-web-hugo","source":"@site/blog/2023-03-29-static-web-hugo.md","title":"Create a static website with Hugo","description":"Static websites like online resume or blog sites can be created using HTML, CSS, and JavaScript if you are a front-end developer. However, it can be a bit of a headache for people who are not familiar with these technologies. More importantly, if you are creating a blog site, it\u2019s difficult to maintain uniformity in all its pages. I am going to describe how we can create a static website without the need for such technologies.","date":"2023-03-29T12:17:39.000Z","tags":[{"inline":false,"label":"Hugo","permalink":"/blog/tags/hugo","description":"Hugo tag description"}],"readingTime":2.29,"hasTruncateMarker":true,"authors":[],"frontMatter":{"title":"Create a static website with Hugo","subtitle":"In this article, we will explain how to create a blog site that incurs a minimal cost and doesn\u2019t need our own hosting server.","date":"2023-03-29T12:17:39.000Z","tags":["hugo"]},"unlisted":false,"prevItem":{"title":"Install OS on an SSD with the RPi Imager","permalink":"/blog/2023/04/07/set-up-SDD-with-rpi"}},"content":"Static websites like online resume or blog sites can be created using HTML, CSS, and JavaScript if you are a front-end developer. However, it can be a bit of a headache for people who are not familiar with these technologies. More importantly, if you are creating a blog site, it\u2019s difficult to maintain uniformity in all its pages. I am going to describe how we can create a static website without the need for such technologies.\\n\x3c!-- truncate --\x3e\\n## Tools Used\\n\\n* [Hugo][hugo]: A fast and modern static website engine\\n* Any text editor of your choice. I prefer [VS Code][vscode]\\n\\n## Getting Started\\n\\n1. Download and [install Hugo][hugo_installation]. For more details, refer Hugo\u2019s [getting started][hugo_getting_started] guide.\\n2. Once Hugo is installed, open a terminal and go to the folder where you want to store the code for your blog or static website\\n3. Run these commands to create a Hugo site with the LoveIt theme\\n\\n    Create the [directory structure][hugo_dir_structure] for your project in the quickstart directory.\\n\\n    ```sh\\n    hugo new site quickstart\\n    ```\\n\\n    Change the current directory to the root of your project.\\n\\n    ```sh\\n    cd quickstart\\n    ```\\n\\n    Initialize an empty Git repository in the current directory.\\n\\n    ```sh\\n    git init\\n    ```\\n\\n    Go to [hugo themes][hugo_themes] and clone a theme of your choice in the themes fodler. I cloned the [LoveIt][loveit] theme into the themes directory, adding it to your project as a Git submodule.\\n\\n    ```sh\\n    git clone --recurse-submodule git@github.com:horia-delicoti/LoveIt.git themese/LoveIt\\n    ```\\n\\n    Append a line to the site configuration file, indicating the current theme.\\n\\n    ```sh\\n    echo \\"theme = \'LoveIt\'\\" >> config.toml\\n    ```\\n\\n    Start Hugo\u2019s development server to view the site.\\n\\n    ```sh\\n    hugo server\\n    ```\\n\\n    Press Ctrl + C to stop Hugo\u2019s development server.\\n\\n    Go to [http://localhost:1313][localhost]\\n\\n4. To create a new blog entry, run hugo command. It will create a file in `content/post/` folder\\n\\n    ```sh\\n    hugo new post/<blog-file-name>.md\\n    ```\\n\\n5. Open the newly created file in the text editor of your choice and start drafting the blog\\n6. Once you are done drafting the content, delete the contents of public folder and run hugo command to regenerate the files\\n7. Create a repo on Github and check in the content of the public folder\\n8. To publish on `GitHub Pages`, follow [here][host_on_github]. If you want to use a custom domain, please follow [this][custom_domain].\\n\\n## References\\n\\n* [Hugo][hugo]\\n* [VS Code][vscode]\\n* [Using a custom domain with github pages][custom_domain]\\n\\n[hugo_getting_started]: https://gohugo.io/getting-started/\\n[hugo_installation]: https://gohugo.io/installation/\\n[hugo_dir_structure]: https://gohugo.io/getting-started/directory-structure/\\n[hugo_themes]: http://themes.gohugo.io/\\n[loveit]: https://github.com/dillonzq/LoveIt\\n[localhost]: http://localhost:1313\\n[hugo]: https://gohugo.io\\n[vscode]: https://code.visualstudio.com/\\n[custom_domain]: https://help.github.com/articles/using-a-custom-domain-with-github-pages\\n[host_on_github]: https://gohugo.io/hosting-and-deployment/hosting-on-github/"}]}}')}}]);