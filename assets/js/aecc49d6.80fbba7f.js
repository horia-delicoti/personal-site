"use strict";(self.webpackChunkpersonal_site=self.webpackChunkpersonal_site||[]).push([[4004],{1671:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"devops/terraform","title":"Terraform","description":"Terraform is an open-source Infrastructure as Code (IaC) tool created by HashiCorp. It allows you to define, provision, and manage cloud infrastructure and services using declarative configuration files. Terraform supports multiple cloud providers (AWS, Azure, GCP, etc.) and on-premises solutions, making it a popular choice for automating infrastructure deployment and management.","source":"@site/docs/devops/terraform.md","sourceDirName":"devops","slug":"/devops/terraform","permalink":"/docs/devops/terraform","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Terraform"},"sidebar":"tutorialSidebar","previous":{"title":"System Design","permalink":"/docs/devops/system-design"},"next":{"title":"Vagrant","permalink":"/docs/devops/vagrant"}}');var t=a(4848),o=a(8453);const s={title:"Terraform"},i=void 0,l={},c=[{value:"\ud83c\udf1f Key Features",id:"-key-features",level:2},{value:"\ud83d\ude80 Common Use Cases",id:"-common-use-cases",level:2},{value:"\ud83d\udcda Resources",id:"-resources",level:2},{value:"\ud83d\udee0\ufe0f Terraform Command Reference",id:"\ufe0f-terraform-command-reference",level:2},{value:"General CLI",id:"general-cli",level:3},{value:"Format and Validate",id:"format-and-validate",level:3},{value:"Logging",id:"logging",level:3},{value:"Initialization",id:"initialization",level:3},{value:"Plan, Apply, and Destroy",id:"plan-apply-and-destroy",level:3},{value:"Workspaces",id:"workspaces",level:3},{value:"State Manipulation",id:"state-manipulation",level:3},{value:"Import and Outputs",id:"import-and-outputs",level:3},{value:"Console and Graph",id:"console-and-graph",level:3},{value:"Taint/Untaint and State Locking",id:"taintuntaint-and-state-locking",level:3},{value:"Terraform Cloud",id:"terraform-cloud",level:3},{value:"\ud83d\udcdd Tips &amp; Notes",id:"-tips--notes",level:2}];function d(e){const r={a:"a",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.a,{href:"https://www.terraform.io/",children:"Terraform"})," is an open-source Infrastructure as Code (IaC) tool created by HashiCorp. It allows you to define, provision, and manage cloud infrastructure and services using declarative configuration files. Terraform supports multiple cloud providers (AWS, Azure, GCP, etc.) and on-premises solutions, making it a popular choice for automating infrastructure deployment and management."]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"-key-features",children:"\ud83c\udf1f Key Features"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Declarative Configuration:"})," Define infrastructure in human-readable HCL (HashiCorp Configuration Language)."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Multi-Cloud Support:"})," Manage resources across AWS, Azure, GCP, and many other providers."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"State Management:"})," Keeps track of infrastructure state for idempotent operations."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Modular:"})," Reusable modules for organizing and sharing infrastructure code."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Execution Plans:"})," Preview changes before applying them to your infrastructure."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Community Ecosystem:"})," Large registry of modules and providers."]}),"\n"]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"-common-use-cases",children:"\ud83d\ude80 Common Use Cases"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Provisioning cloud infrastructure (servers, databases, networks)"}),"\n",(0,t.jsx)(r.li,{children:"Managing DNS, CDN, and storage resources"}),"\n",(0,t.jsx)(r.li,{children:"Automating infrastructure changes and scaling"}),"\n",(0,t.jsx)(r.li,{children:"Enforcing infrastructure best practices and compliance"}),"\n"]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"-resources",children:"\ud83d\udcda Resources"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://www.terraform.io/",children:"Terraform"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://registry.terraform.io/",children:"Terraform Registry"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://learn.hashicorp.com/terraform",children:"Learn Terraform"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://www.hashicorp.com/certification/terraform-associate",children:"Prepare for the exam"})}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://www.terraformupandrunning.com/",children:"Terraform: Up & Running"})}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"https://www.udemy.com/course/terraform-beginner-to-advanced/",children:"Udemy: HashiCorp Certified: Terraform Associate 2023"})," - ",(0,t.jsx)(r.a,{href:"https://github.com/zealvora/terraform-beginner-to-advanced-resource/tree/master",children:"Github"})]}),"\n",(0,t.jsx)(r.li,{children:(0,t.jsx)(r.a,{href:"https://www.terraform-best-practices.com/",children:"Terraform Best Practices"})}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"https://github.com/tfutils/tfenv",children:"tfenv"})," - Terraform version manager"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"https://github.com/futurice/terraform-examples",children:"Terraform Examples"})," - Terraform samples for all the major clouds you can copy and paste"]}),"\n"]}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"\ufe0f-terraform-command-reference",children:"\ud83d\udee0\ufe0f Terraform Command Reference"}),"\n",(0,t.jsx)(r.h3,{id:"general-cli",children:"General CLI"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sh",children:"terraform -install-autocomplete           # Setup tab auto-completion, requires logging back in\nterraform version                        # Display Terraform binary version, warns if version is old\nterraform get -update=true               # Download and update modules in the \u201croot\u201d module\n"})}),"\n",(0,t.jsx)(r.h3,{id:"format-and-validate",children:"Format and Validate"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sh",children:"terraform fmt                            # Format code per HCL canonical standard\nterraform validate                       # Validate code for syntax\nterraform validate -backend=false        # Validate code, skip backend validation\n"})}),"\n",(0,t.jsx)(r.h3,{id:"logging",children:"Logging"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sh",children:"export TF_LOG=trace                      # Enable detailed logs\nexport TF_LOG_PATH=./terraform.log       # Set log file path\n"})}),"\n",(0,t.jsx)(r.h3,{id:"initialization",children:"Initialization"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sh",children:"terraform init                           # Initialize directory, pull down providers\nterraform init -get-plugins=false        # Initialize directory, do not download plugins\nterraform init -verify-plugins=false     # Initialize directory, do not verify plugins for Hashicorp signature\n"})}),"\n",(0,t.jsx)(r.h3,{id:"plan-apply-and-destroy",children:"Plan, Apply, and Destroy"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sh",children:"terraform plan -out plan.out             # Output the deployment plan to plan.out\nterraform plan -destroy                  # Outputs a destroy plan\nterraform apply --auto-approve           # Apply changes without prompt\nterraform apply plan.out                 # Use the plan.out plan file to deploy infrastructure\nterraform apply -target=aws_instance.my_ec2 # Only apply/deploy changes to the targeted resource\nterraform apply -var my_region_variable=us-east-1 # Pass a variable via command-line\nterraform apply -lock=true               # Lock the state file during apply\nterraform apply refresh=false            # Do not reconcile state file with real-world resources\nterraform apply --parallelism=5          # Number of simultaneous resource operations\nterraform destroy --auto-approve         # Destroy/cleanup deployment without prompt\nterraform refresh                        # Reconcile the state in Terraform state file with real-world resources\nterraform providers                      # Get information about providers used in current configuration\n"})}),"\n",(0,t.jsx)(r.h3,{id:"workspaces",children:"Workspaces"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sh",children:"terraform workspace new mynewworkspace   # Create a new workspace\nterraform workspace select default       # Change to the selected workspace\nterraform workspace list                 # List all workspaces\n"})}),"\n",(0,t.jsx)(r.h3,{id:"state-manipulation",children:"State Manipulation"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sh",children:"terraform state show aws_instance.my_ec2 # Show details stored in Terraform state for the resource\nterraform state pull > terraform.tfstate # Download and output terraform state to a file\nterraform state mv aws_iam_role.my_ssm_role module.custom_module # Move a resource to a different module\nterraform state replace-provider hashicorp/aws registry.custom.com/aws # Replace an existing provider\nterraform state list                     # List all resources tracked via the current state file\nterraform state rm aws_instance.myinstace # Unmanage a resource, delete from state file\n"})}),"\n",(0,t.jsx)(r.h3,{id:"import-and-outputs",children:"Import and Outputs"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sh",children:"terraform import aws_instance.new_ec2_instance i-abcd1234 # Import EC2 instance into Terraform\nterraform import 'aws_instance.new_ec2_instance[0]' i-abcd1234 # Import into an instance of a resource\nterraform output                          # List all outputs as stated in code\nterraform output instance_public_ip        # List a specific declared output\nterraform output -json                     # List all outputs in JSON format\n"})}),"\n",(0,t.jsx)(r.h3,{id:"console-and-graph",children:"Console and Graph"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sh",children:'echo \'join(",",["foo","bar"])\' | terraform console # Test out Terraform interpolations\necho \'1 + 5\' | terraform console\necho "aws_instance.my_ec2.public_ip" | terraform console\nterraform graph | dot -Tpng > graph.png           # Produce a PNG diagram of resource dependencies\n'})}),"\n",(0,t.jsx)(r.h3,{id:"taintuntaint-and-state-locking",children:"Taint/Untaint and State Locking"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sh",children:"terraform taint aws_instance.my_ec2               # Mark resource for recreation on next apply\nterraform untaint aws_instance.my_ec2             # Remove taint from a resource\nterraform force-unlock LOCK_ID                    # Forcefully unlock a locked state file\n"})}),"\n",(0,t.jsx)(r.h3,{id:"terraform-cloud",children:"Terraform Cloud"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-sh",children:"terraform login                                   # Obtain and save API token for Terraform cloud\nterraform logout                                  # Log out of Terraform Cloud\n"})}),"\n",(0,t.jsx)(r.hr,{}),"\n",(0,t.jsx)(r.h2,{id:"-tips--notes",children:"\ud83d\udcdd Tips & Notes"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Use modules to organize and reuse code."}),"\n",(0,t.jsx)(r.li,{children:"Store state files securely (e.g., in remote backends like S3 with state locking)."}),"\n",(0,t.jsx)(r.li,{children:"Use variables and outputs for flexibility and integration."}),"\n",(0,t.jsxs)(r.li,{children:["Review the ",(0,t.jsx)(r.a,{href:"https://developer.hashicorp.com/terraform/cli",children:"Terraform CLI documentation"})," for advanced usage."]}),"\n",(0,t.jsxs)(r.li,{children:["Preview changes with ",(0,t.jsx)(r.code,{children:"terraform plan"})," before applying."]}),"\n"]}),"\n",(0,t.jsx)(r.hr,{})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,r,a)=>{a.d(r,{R:()=>s,x:()=>i});var n=a(6540);const t={},o=n.createContext(t);function s(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);